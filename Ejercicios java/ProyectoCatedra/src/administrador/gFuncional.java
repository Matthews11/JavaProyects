/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package administrador;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author oscar
 */
public class gFuncional extends javax.swing.JInternalFrame {

    /**
     * Creates new form GFuncional
     */
    
       public void actualizarTabla() throws SQLException {
       
        btnEliminar.setEnabled(true);
        btnLimpiar.setEnabled(false);
        btnActualizar.setEnabled(false);
        

        model = new DefaultTableModel();

        model.addColumn("Id_Empleados");
        model.addColumn("Nombre");
        model.addColumn("Apellido");
        model.addColumn("Edad");
        model.addColumn("Correo");
        model.addColumn("Tipo_Empleado");
        
        String codigo = "", nombre = "", apellido= "", edad = "", correo= "", Tipo_Empleado= "" ;
         conexionA con = new conexionA();
        String sql = "SELECT * FROM Empleados";
        ResultSet rs;
        con.setRs(sql);
        rs = con.getRs();
        
       
        while (rs.next()) {
            codigo = rs.getString("Id_Empleados");
            nombre = rs.getString("Nombre");
            apellido = rs.getString("Apellido");
            edad = rs.getString("Edad");
            correo = rs.getString("Correo");
            Tipo_Empleado = rs.getString("Tipo_Empleado");
            
            model.addRow(new Object[]{codigo, nombre, apellido, edad, correo ,Tipo_Empleado});
        }
        tableJefe.setModel(model);
        con.cerrarConexion();
        
    }
    
    
    
    
    public gFuncional() throws SQLException {
        initComponents();
         actualizarTabla() ;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        btnLimpiar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtApellido = new javax.swing.JTextField();
        txtJefe = new javax.swing.JTextField();
        txtEdad = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableJefe = new javax.swing.JTable();
        txtCorreo = new javax.swing.JTextField();
        btnActualizar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtTipo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel4.setText("Edad:");

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        jLabel5.setText("Correo:");

        jLabel1.setText("ID Jefe de Area Funcional:");

        txtJefe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJefeActionPerformed(evt);
            }
        });

        tableJefe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID Empleados", "Nombres", "Apellidos", "Edad", "Correo", "Tipo Empleado"
            }
        ));
        tableJefe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableJefeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableJefe);

        btnActualizar.setText("Actualizar");
        btnActualizar.setPreferredSize(new java.awt.Dimension(85, 23));
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        jLabel2.setText("Apellido:");

        jLabel8.setText("Tipo Empleado");

        jLabel3.setText("Nombre:");

        btnAgregar.setText("Agregar ");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar Relacion");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txtJefe, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNombre))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(txtCorreo))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(183, 183, 183))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(81, Short.MAX_VALUE)
                        .addComponent(btnAgregar)
                        .addGap(80, 80, 80)
                        .addComponent(btnEliminar)
                        .addGap(40, 40, 40)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(99, 99, 99)
                        .addComponent(btnLimpiar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addGap(38, 38, 38)
                        .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(192, 192, 192))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtJefe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminar)
                    .addComponent(btnLimpiar)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAgregar))
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
     DefaultTableModel model;
 
    
   
    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        limpiarText();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void tableJefeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableJefeMouseClicked
        // TODO add your handling code here:
        btnEliminar.setEnabled(true);
        btnActualizar.setEnabled(true);
        btnLimpiar.setEnabled(true);
        int fila = tableJefe.getSelectedRow();
        if ((fila > -1)) {
            txtJefe.setText(model.getValueAt(fila, 0).toString());
            txtNombre.setText(model.getValueAt(fila, 1).toString());
            txtApellido.setText(model.getValueAt(fila, 2).toString());
            txtEdad.setText(model.getValueAt(fila, 3).toString());
            txtCorreo.setText(model.getValueAt(fila, 4).toString());
            txtTipo.setText(model.getValueAt(fila, 5).toString());

        }
    }//GEN-LAST:event_tableJefeMouseClicked

    private void limpiarText() {
        txtNombre.setText("");
        txtApellido.setText("");
        txtCorreo.setText("");
        txtEdad.setText("");
        txtJefe.setText("");
        txtTipo.setText("");
    }
    
    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:

        try {
            // TODO add your handling code here:
            Class.forName("com.mysql.jdbc.Driver");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(gFuncional.class.getName()).log(Level.SEVERE, null, ex);
        }
        Connection con = null;
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:6666/pooo", "root", "12345");
        } catch (SQLException ex) {
            Logger.getLogger(gFuncional.class.getName()).log(Level.SEVERE, null, ex);
        }
        int fila = tableJefe.getSelectedRow();
        String Id_Empleados = model.getValueAt(fila, 0).toString();
        String Nombre = txtNombre.getText();
        String Apellido = txtApellido.getText();
        int Edad = Integer.parseInt(txtEdad.getText()) ;
        String Correo =txtCorreo.getText();
        int Tipo_Empleado = Integer.parseInt( txtTipo.getText());

        PreparedStatement stmt = null;
        try {
            stmt = con.prepareStatement("UPDATE Empleados SET Id_Empleados=?,Nombre=?, Apellido=?, Edad=?, Correo=?, "
                + " Tipo_Empleado=? WHERE Id_Empleados="+Id_Empleados);
        } catch (SQLException ex) {
            Logger.getLogger(gFuncional.class.getName()).log(Level.SEVERE, null, ex);
        }
         try {
            stmt.setString(
                    1, Id_Empleados);
        } catch (SQLException ex) {
            Logger.getLogger(gDesarrollo.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            stmt.setString(
                2, Nombre);
        } catch (SQLException ex) {
            Logger.getLogger(gFuncional.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            stmt.setString(
                3, Apellido);
        } catch (SQLException ex) {
            Logger.getLogger(gFuncional.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            stmt.setInt(
                4, Edad);
        } catch (SQLException ex) {
            Logger.getLogger(gFuncional.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            stmt.setString(
                5, Correo);
        } catch (SQLException ex) {
            Logger.getLogger(gFuncional.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            stmt.setInt(
                6, Tipo_Empleado);
        } catch (SQLException ex) {
            Logger.getLogger(gDesarrollo.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            int i = stmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "El Jefe de Desarrollo fue actualizado con exito.");
        } catch (SQLException ex) {
            Logger.getLogger(gFuncional.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(gFuncional.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            actualizarTabla();
        } catch (SQLException ex) {
            Logger.getLogger(gFuncional.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            Class.forName("com.mysql.jdbc.Driver");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(gFuncional.class.getName()).log(Level.SEVERE, null, ex);
        }
        Connection con = null;
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:6666/pooo", "root", "12345");
        } catch (SQLException ex) {
            Logger.getLogger(gFuncional.class.getName()).log(Level.SEVERE, null, ex);
        }

        String Id_Empleados = txtJefe.getText();
        String Nombre = txtNombre.getText();
        String Apellido = txtApellido.getText();
        int Edad = Integer.parseInt(txtEdad.getText() ) ;
        String Correo =txtCorreo.getText();
        int Tipo_Empleado = Integer.parseInt( txtTipo.getText());
        PreparedStatement stmt = null;
        try {
            stmt = con.prepareStatement("INSERT INTO Empleados(Id_Empleados,Nombre, Apellido, Edad, Correo, Tipo_Empleado) VALUES(?,?,?,?,?,?)");
        } catch (SQLException ex) {
            Logger.getLogger(gFuncional.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            stmt.setString(
                1, Id_Empleados);
        } catch (SQLException ex) {
            Logger.getLogger(gFuncional.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            stmt.setString(
                2, Nombre);
        } catch (SQLException ex) {
            Logger.getLogger(gFuncional.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            stmt.setString(
                3, Apellido);
        } catch (SQLException ex) {
            Logger.getLogger(gFuncional.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            stmt.setInt(
                4, Edad);
        } catch (SQLException ex) {
            Logger.getLogger(gFuncional.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            stmt.setString(
                5, Correo);
        } catch (SQLException ex) {

            Logger.getLogger(gFuncional.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            stmt.setInt(
                6, Tipo_Empleado);
        } catch (SQLException ex) {
            Logger.getLogger(gFuncional.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            int i = stmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "El Jefe de Area Funcional fue registrado con exito.");
        } catch (SQLException ex) {
            Logger.getLogger(gFuncional.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(gFuncional.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            actualizarTabla();
        } catch (SQLException ex) {
            Logger.getLogger(gFuncional.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        conexionA con = null;
        try {
            con = new conexionA();
        } catch (SQLException ex) {
            Logger.getLogger(gFuncional.class.getName()).log(Level.SEVERE, null, ex);
        }
        int fila = tableJefe.getSelectedRow();
        String codigo = model.getValueAt(fila, 0).toString();
        String sql = "DELETE FROM Empleados WHERE Id_Empleados=" + codigo;
        try {
            con.setQuery(sql);
            JOptionPane.showMessageDialog(null, "El Jefe de Area Funcional fue borrado con exito.");
        } catch (SQLException ex) {
            Logger.getLogger(gFuncional.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            con.cerrarConexion();
        } catch (SQLException ex) {
            Logger.getLogger(gFuncional.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            actualizarTabla();
        } catch (SQLException ex) {
            Logger.getLogger(gFuncional.class.getName()).log(Level.SEVERE, null, ex);
        }

        }

        private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void txtJefeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJefeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJefeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableJefe;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtJefe;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTipo;
    // End of variables declaration//GEN-END:variables
}
